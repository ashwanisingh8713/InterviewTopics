
https://medium.com/huawei-developers/stateful-android-apps-with-mvi-architecture-model-view-intent-d106b09bd967


MVI is a Reactive Architecture Pattern which is short for Model -View-Intent.

Model 	 - represents the state of UI. For example UI may have different states like loading, loaded, errors, User button submit state etc.


View 	 - It is represented by an interface which defines a set of user actions / intents as Observables.
           view is a function that takes a new state and defines the display logic inside of it

Intent 	 - The intent simply describes an intention.
	 - We will be sending models as action to the Intents which can load or show it through Views.


Event, Result, State, Effect

Event	- Any User's Event
Result	- Response from API, DB 
State	- Data Model Class
Effect	- UI Changes


Having this pattern solves a lot of issues we often struggles with in Android Development.
	- The State Problem
	- Screen orientation changes
	- Navigation on the back stack
	- Process death
	- Immutability and unidirectional data flow
	- Debuggable and reproducible states
	- Testability


	


